import {getEvenParityBit} from "../../solutions/aleattene/solution-023-parity-bits";

describe('Get Even Parity Bit', () => {
    it('Test', () => {
        expect(getEvenParityBit('00000000')).toBe('0');
        expect(getEvenParityBit('00000001')).toBe('1');
        expect(getEvenParityBit('00000010')).toBe('1');
        expect(getEvenParityBit('00000011')).toBe('0');
        expect(getEvenParityBit('00000100')).toBe('1');
        expect(getEvenParityBit('00000101')).toBe('0');
        expect(getEvenParityBit('00000110')).toBe('0');
        expect(getEvenParityBit('00000111')).toBe('1');
        expect(getEvenParityBit('00001000')).toBe('1');
        expect(getEvenParityBit('00001001')).toBe('0');
        expect(getEvenParityBit('00001010')).toBe('0');
        expect(getEvenParityBit('00001011')).toBe('1');
        expect(getEvenParityBit('00001100')).toBe('0');
        expect(getEvenParityBit('00001101')).toBe('1');
        expect(getEvenParityBit('00001110')).toBe('1');
        expect(getEvenParityBit('00001111')).toBe('0');
        expect(getEvenParityBit('00010000')).toBe('1');
        expect(getEvenParityBit('00010001')).toBe('0');
        expect(getEvenParityBit('00010010')).toBe('0');
        expect(getEvenParityBit('00010011')).toBe('1');
        expect(getEvenParityBit('00010100')).toBe('0');
        expect(getEvenParityBit('00010101')).toBe('1');
        expect(getEvenParityBit('00010110')).toBe('1');
        expect(getEvenParityBit('00010111')).toBe('0');
        expect(getEvenParityBit('00011000')).toBe('0');
        expect(getEvenParityBit('00011001')).toBe('1');
        expect(getEvenParityBit('00011010')).toBe('1');
        expect(getEvenParityBit('00011011')).toBe('0');
        expect(getEvenParityBit('00011100')).toBe('1');
        expect(getEvenParityBit('00011101')).toBe('0');
        expect(getEvenParityBit('00011110')).toBe('0');
        expect(getEvenParityBit('00011111')).toBe('1');
        expect(getEvenParityBit('00100000')).toBe('1');
        expect(getEvenParityBit('00100001')).toBe('0');
        expect(getEvenParityBit('00100010')).toBe('0');
        expect(getEvenParityBit('00100011')).toBe('1');
        expect(getEvenParityBit('00100100')).toBe('0');
        expect(getEvenParityBit('00100101')).toBe('1');
        expect(getEvenParityBit('00100110')).toBe('1');
        expect(getEvenParityBit('00100111')).toBe('0');
        expect(getEvenParityBit('00101000')).toBe('0');
        expect(getEvenParityBit('00101001')).toBe('1');
        expect(getEvenParityBit('00101010')).toBe('1');
        expect(getEvenParityBit('00101011')).toBe('0');
        expect(getEvenParityBit('00101100')).toBe('1');
        expect(getEvenParityBit('00101101')).toBe('0');
        expect(getEvenParityBit('00101110')).toBe('0');
        expect(getEvenParityBit('00101111')).toBe('1');
        expect(getEvenParityBit('00110000')).toBe('0');
        expect(getEvenParityBit('00110001')).toBe('1');
        expect(getEvenParityBit('00110010')).toBe('1');
        expect(getEvenParityBit('00110011')).toBe('0');
        expect(getEvenParityBit('00110100')).toBe('1');
        expect(getEvenParityBit('00110101')).toBe('0');
        expect(getEvenParityBit('00110110')).toBe('0');
        expect(getEvenParityBit('00110111')).toBe('1');
        expect(getEvenParityBit('00111000')).toBe('1');
        expect(getEvenParityBit('00111001')).toBe('0');
        expect(getEvenParityBit('00111010')).toBe('0');
        expect(getEvenParityBit('00111011')).toBe('1');
        expect(getEvenParityBit('00111100')).toBe('0');
        expect(getEvenParityBit('00111101')).toBe('1');
        expect(getEvenParityBit('00111110')).toBe('1');
        expect(getEvenParityBit('00111111')).toBe('0');
        expect(getEvenParityBit('01000000')).toBe('1');
        expect(getEvenParityBit('01000001')).toBe('0');
        expect(getEvenParityBit('01000010')).toBe('0');
        expect(getEvenParityBit('01000011')).toBe('1');
        expect(getEvenParityBit('01000100')).toBe('0');
        expect(getEvenParityBit('01000101')).toBe('1');
        expect(getEvenParityBit('01000110')).toBe('1');
        expect(getEvenParityBit('01000111')).toBe('0');
        expect(getEvenParityBit('01001000')).toBe('0');
        expect(getEvenParityBit('01001001')).toBe('1');
        expect(getEvenParityBit('01001010')).toBe('1');
        expect(getEvenParityBit('01001011')).toBe('0');
        expect(getEvenParityBit('01001100')).toBe('1');
        expect(getEvenParityBit('01001101')).toBe('0');
        expect(getEvenParityBit('01001110')).toBe('0');
        expect(getEvenParityBit('01001111')).toBe('1');
        expect(getEvenParityBit('01010000')).toBe('0');
        expect(getEvenParityBit('01010001')).toBe('1');
        expect(getEvenParityBit('01010010')).toBe('1');
        expect(getEvenParityBit('01010011')).toBe('0');
        expect(getEvenParityBit('01010100')).toBe('1');
        expect(getEvenParityBit('01010101')).toBe('0');
        expect(getEvenParityBit('01010110')).toBe('0');
        expect(getEvenParityBit('01010111')).toBe('1');
        expect(getEvenParityBit('01011000')).toBe('1');
        expect(getEvenParityBit('01011001')).toBe('0');
        expect(getEvenParityBit('01011010')).toBe('0');
        expect(getEvenParityBit('01011011')).toBe('1');
        expect(getEvenParityBit('01011100')).toBe('0');
        expect(getEvenParityBit('01011101')).toBe('1');
        expect(getEvenParityBit('01011110')).toBe('1');
        expect(getEvenParityBit('01011111')).toBe('0');
        expect(getEvenParityBit('01100000')).toBe('0');
        expect(getEvenParityBit('01100001')).toBe('1');
        expect(getEvenParityBit('01100010')).toBe('1');
        expect(getEvenParityBit('01100011')).toBe('0');
        expect(getEvenParityBit('01100100')).toBe('1');
        expect(getEvenParityBit('01100101')).toBe('0');
        expect(getEvenParityBit('01100110')).toBe('0');
        expect(getEvenParityBit('01100111')).toBe('1');
        expect(getEvenParityBit('01101000')).toBe('1');
        expect(getEvenParityBit('01101001')).toBe('0');
        expect(getEvenParityBit('01101010')).toBe('0');
        expect(getEvenParityBit('01101011')).toBe('1');
        expect(getEvenParityBit('01101100')).toBe('0');
        expect(getEvenParityBit('01101101')).toBe('1');
        expect(getEvenParityBit('01101110')).toBe('1');
        expect(getEvenParityBit('01101111')).toBe('0');
        expect(getEvenParityBit('01110000')).toBe('1');
        expect(getEvenParityBit('01110001')).toBe('0');
        expect(getEvenParityBit('01110010')).toBe('0');
        expect(getEvenParityBit('01110011')).toBe('1');
        expect(getEvenParityBit('01110100')).toBe('0');
        expect(getEvenParityBit('01110101')).toBe('1');
        expect(getEvenParityBit('01110110')).toBe('1');
        expect(getEvenParityBit('01110111')).toBe('0');
        expect(getEvenParityBit('01111000')).toBe('0');
        expect(getEvenParityBit('01111001')).toBe('1');
        expect(getEvenParityBit('01111010')).toBe('1');
        expect(getEvenParityBit('01111011')).toBe('0');
        expect(getEvenParityBit('01111100')).toBe('1');
        expect(getEvenParityBit('01111101')).toBe('0');
        expect(getEvenParityBit('01111110')).toBe('0');
        expect(getEvenParityBit('01111111')).toBe('1');
        expect(getEvenParityBit('10000000')).toBe('1');
        expect(getEvenParityBit('10000001')).toBe('0');
        expect(getEvenParityBit('10000010')).toBe('0');
        expect(getEvenParityBit('10000011')).toBe('1');
        expect(getEvenParityBit('10000100')).toBe('0');
        expect(getEvenParityBit('10000101')).toBe('1');
        expect(getEvenParityBit('10000110')).toBe('1');
        expect(getEvenParityBit('10000111')).toBe('0');
        expect(getEvenParityBit('10001000')).toBe('0');
        expect(getEvenParityBit('10001001')).toBe('1');
        expect(getEvenParityBit('10001010')).toBe('1');
        expect(getEvenParityBit('10001011')).toBe('0');
        expect(getEvenParityBit('10001100')).toBe('1');
        expect(getEvenParityBit('10001101')).toBe('0');
        expect(getEvenParityBit('10001110')).toBe('0');
        expect(getEvenParityBit('10001111')).toBe('1');
        expect(getEvenParityBit('10010000')).toBe('0');
        expect(getEvenParityBit('10010001')).toBe('1');
        expect(getEvenParityBit('10010010')).toBe('1');
        expect(getEvenParityBit('10010011')).toBe('0');
        expect(getEvenParityBit('10010100')).toBe('1');
        expect(getEvenParityBit('10010101')).toBe('0');
        expect(getEvenParityBit('10010110')).toBe('0');
        expect(getEvenParityBit('10010111')).toBe('1');
        expect(getEvenParityBit('10011000')).toBe('1');
        expect(getEvenParityBit('10011001')).toBe('0');
        expect(getEvenParityBit('10011010')).toBe('0');
        expect(getEvenParityBit('10011011')).toBe('1');
        expect(getEvenParityBit('10011100')).toBe('0');
        expect(getEvenParityBit('10011101')).toBe('1');
        expect(getEvenParityBit('10011110')).toBe('1');
        expect(getEvenParityBit('10011111')).toBe('0');
        expect(getEvenParityBit('10100000')).toBe('0');
        expect(getEvenParityBit('10100001')).toBe('1');
        expect(getEvenParityBit('10100010')).toBe('1');
        expect(getEvenParityBit('10100011')).toBe('0');
        expect(getEvenParityBit('10100100')).toBe('1');
        expect(getEvenParityBit('10100101')).toBe('0');
        expect(getEvenParityBit('10100110')).toBe('0');
        expect(getEvenParityBit('10100111')).toBe('1');
        expect(getEvenParityBit('10101000')).toBe('1');
        expect(getEvenParityBit('10101001')).toBe('0');
        expect(getEvenParityBit('10101010')).toBe('0');
        expect(getEvenParityBit('10101011')).toBe('1');
        expect(getEvenParityBit('10101100')).toBe('0');
        expect(getEvenParityBit('10101101')).toBe('1');
        expect(getEvenParityBit('10101110')).toBe('1');
        expect(getEvenParityBit('10101111')).toBe('0');
        expect(getEvenParityBit('10110000')).toBe('1');
        expect(getEvenParityBit('10110001')).toBe('0');
        expect(getEvenParityBit('10110010')).toBe('0');
        expect(getEvenParityBit('10110011')).toBe('1');
        expect(getEvenParityBit('10110100')).toBe('0');
        expect(getEvenParityBit('10110101')).toBe('1');
        expect(getEvenParityBit('10110110')).toBe('1');
        expect(getEvenParityBit('10110111')).toBe('0');
        expect(getEvenParityBit('10111000')).toBe('0');
        expect(getEvenParityBit('10111001')).toBe('1');
        expect(getEvenParityBit('10111010')).toBe('1');
        expect(getEvenParityBit('10111011')).toBe('0');
        expect(getEvenParityBit('10111100')).toBe('1');
        expect(getEvenParityBit('10111101')).toBe('0');
        expect(getEvenParityBit('10111110')).toBe('0');
        expect(getEvenParityBit('10111111')).toBe('1');
        expect(getEvenParityBit('11000000')).toBe('0');
        expect(getEvenParityBit('11000001')).toBe('1');
        expect(getEvenParityBit('11000010')).toBe('1');
        expect(getEvenParityBit('11000011')).toBe('0');
        expect(getEvenParityBit('11000100')).toBe('1');
        expect(getEvenParityBit('11000101')).toBe('0');
        expect(getEvenParityBit('11000110')).toBe('0');
        expect(getEvenParityBit('11000111')).toBe('1');
        expect(getEvenParityBit('11001000')).toBe('1');
        expect(getEvenParityBit('11001001')).toBe('0');
        expect(getEvenParityBit('11001010')).toBe('0');
        expect(getEvenParityBit('11001011')).toBe('1');
        expect(getEvenParityBit('11001100')).toBe('0');
        expect(getEvenParityBit('11001101')).toBe('1');
        expect(getEvenParityBit('11001110')).toBe('1');
        expect(getEvenParityBit('11001111')).toBe('0');
        expect(getEvenParityBit('11010000')).toBe('1');
        expect(getEvenParityBit('11010001')).toBe('0');
        expect(getEvenParityBit('11010010')).toBe('0');
        expect(getEvenParityBit('11010011')).toBe('1');
        expect(getEvenParityBit('11010100')).toBe('0');
        expect(getEvenParityBit('11010101')).toBe('1');
        expect(getEvenParityBit('11010110')).toBe('1');
        expect(getEvenParityBit('11010111')).toBe('0');
        expect(getEvenParityBit('11011000')).toBe('0');
        expect(getEvenParityBit('11011001')).toBe('1');
        expect(getEvenParityBit('11011010')).toBe('1');
        expect(getEvenParityBit('11011011')).toBe('0');
        expect(getEvenParityBit('11011100')).toBe('1');
        expect(getEvenParityBit('11011101')).toBe('0');
        expect(getEvenParityBit('11011110')).toBe('0');
        expect(getEvenParityBit('11011111')).toBe('1');
        expect(getEvenParityBit('11100000')).toBe('1');
        expect(getEvenParityBit('11100001')).toBe('0');
        expect(getEvenParityBit('11100010')).toBe('0');
        expect(getEvenParityBit('11100011')).toBe('1');
        expect(getEvenParityBit('11100100')).toBe('0');
        expect(getEvenParityBit('11100101')).toBe('1');
        expect(getEvenParityBit('11100110')).toBe('1');
        expect(getEvenParityBit('11100111')).toBe('0');
        expect(getEvenParityBit('11101000')).toBe('0');
        expect(getEvenParityBit('11101001')).toBe('1');
        expect(getEvenParityBit('11101010')).toBe('1');
        expect(getEvenParityBit('11101011')).toBe('0');
        expect(getEvenParityBit('11101100')).toBe('1');
        expect(getEvenParityBit('11101101')).toBe('0');
        expect(getEvenParityBit('11101110')).toBe('0');
        expect(getEvenParityBit('11101111')).toBe('1');
        expect(getEvenParityBit('11110000')).toBe('0');
        expect(getEvenParityBit('11110001')).toBe('1');
        expect(getEvenParityBit('11110010')).toBe('1');
        expect(getEvenParityBit('11110011')).toBe('0');
        expect(getEvenParityBit('11110100')).toBe('1');
        expect(getEvenParityBit('11110101')).toBe('0');
        expect(getEvenParityBit('11110110')).toBe('0');
        expect(getEvenParityBit('11110111')).toBe('1');
        expect(getEvenParityBit('11111000')).toBe('1');
        expect(getEvenParityBit('11111001')).toBe('0');
        expect(getEvenParityBit('11111010')).toBe('0');
        expect(getEvenParityBit('11111011')).toBe('1');
        expect(getEvenParityBit('11111100')).toBe('0');
        expect(getEvenParityBit('11111101')).toBe('1');
        expect(getEvenParityBit('11111110')).toBe('1');
        expect(getEvenParityBit('11111111')).toBe('0');
    });
});
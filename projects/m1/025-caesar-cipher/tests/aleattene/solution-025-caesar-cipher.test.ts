import {caesarCipher, shiftedLetter} from "../../solutions/aleattene/solution-025-caesar-cipher";

describe('Caesar Cipher', () => {

    it('Test Shifted Letter', () => {
        const alphabetLowerLetters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
        // Positive Shift
        expect(shiftedLetter(alphabetLowerLetters, 'a', 1)).toBe('b');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 2)).toBe('c');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 3)).toBe('d');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 4)).toBe('e');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 5)).toBe('f');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 6)).toBe('g');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 7)).toBe('h');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 8)).toBe('i');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 9)).toBe('j');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 10)).toBe('k');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 11)).toBe('l');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 12)).toBe('m');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 13)).toBe('n');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 14)).toBe('o');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 15)).toBe('p');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 16)).toBe('q');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 17)).toBe('r');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 18)).toBe('s');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 19)).toBe('t');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 20)).toBe('u');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 21)).toBe('v');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 22)).toBe('w');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 23)).toBe('x');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 24)).toBe('y');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 25)).toBe('z');
        expect(shiftedLetter(alphabetLowerLetters, 'a', 26)).toBe('a');
        expect(shiftedLetter(alphabetLowerLetters, 'b', 26)).toBe('b');
        expect(shiftedLetter(alphabetLowerLetters, 'c', 52)).toBe('c');
        expect(shiftedLetter(alphabetLowerLetters, 'd', 78)).toBe('d');
        expect(shiftedLetter(alphabetLowerLetters, 'e', 104)).toBe('e');
        expect(shiftedLetter(alphabetLowerLetters, 'f', 130)).toBe('f');
        expect(shiftedLetter(alphabetLowerLetters, 'g', 156)).toBe('g');
        expect(shiftedLetter(alphabetLowerLetters, 'h', 182)).toBe('h');
        expect(shiftedLetter(alphabetLowerLetters, 'i', 208)).toBe('i');
        expect(shiftedLetter(alphabetLowerLetters, 'j', 234)).toBe('j');
        expect(shiftedLetter(alphabetLowerLetters, 'k', 260)).toBe('k');
        expect(shiftedLetter(alphabetLowerLetters, 'l', 286)).toBe('l');
        expect(shiftedLetter(alphabetLowerLetters, 'm', 312)).toBe('m');
        expect(shiftedLetter(alphabetLowerLetters, 'n', 338)).toBe('n');
        expect(shiftedLetter(alphabetLowerLetters, 'o', 364)).toBe('o');
        expect(shiftedLetter(alphabetLowerLetters, 'p', 390)).toBe('p');
        expect(shiftedLetter(alphabetLowerLetters, 'q', 416)).toBe('q');
        expect(shiftedLetter(alphabetLowerLetters, 'r', 442)).toBe('r');
        expect(shiftedLetter(alphabetLowerLetters, 's', 468)).toBe('s');
        expect(shiftedLetter(alphabetLowerLetters, 't', 494)).toBe('t');
        expect(shiftedLetter(alphabetLowerLetters, 'u', 520)).toBe('u');
        expect(shiftedLetter(alphabetLowerLetters, 'v', 546)).toBe('v');
        expect(shiftedLetter(alphabetLowerLetters, 'w', 572)).toBe('w');
        expect(shiftedLetter(alphabetLowerLetters, 'x', 598)).toBe('x');
        expect(shiftedLetter(alphabetLowerLetters, 'y', 624)).toBe('y');
        expect(shiftedLetter(alphabetLowerLetters, 'z', 650)).toBe('z');
        // Negative Shift
        expect(shiftedLetter(alphabetLowerLetters, 'a', -1)).toBe('z');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -2)).toBe('y');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -3)).toBe('x');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -4)).toBe('w');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -5)).toBe('v');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -6)).toBe('u');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -7)).toBe('t');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -8)).toBe('s');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -9)).toBe('r');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -10)).toBe('q');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -11)).toBe('p');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -12)).toBe('o');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -13)).toBe('n');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -14)).toBe('m');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -15)).toBe('l');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -16)).toBe('k');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -17)).toBe('j');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -18)).toBe('i');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -19)).toBe('h');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -20)).toBe('g');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -21)).toBe('f');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -22)).toBe('e');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -23)).toBe('d');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -24)).toBe('c');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -25)).toBe('b');
        expect(shiftedLetter(alphabetLowerLetters, 'a', -26)).toBe('a');
        expect(shiftedLetter(alphabetLowerLetters, 'b', -26)).toBe('b');
        expect(shiftedLetter(alphabetLowerLetters, 'c', -52)).toBe('c');
        expect(shiftedLetter(alphabetLowerLetters, 'd', -78)).toBe('d');
        expect(shiftedLetter(alphabetLowerLetters, 'e', -104)).toBe('e');
        expect(shiftedLetter(alphabetLowerLetters, 'f', -130)).toBe('f');
        expect(shiftedLetter(alphabetLowerLetters, 'g', -156)).toBe('g');
        expect(shiftedLetter(alphabetLowerLetters, 'h', -182)).toBe('h');
        expect(shiftedLetter(alphabetLowerLetters, 'i', -208)).toBe('i');
        expect(shiftedLetter(alphabetLowerLetters, 'j', -234)).toBe('j');
        expect(shiftedLetter(alphabetLowerLetters, 'k', -260)).toBe('k');
        expect(shiftedLetter(alphabetLowerLetters, 'l', -286)).toBe('l');
        expect(shiftedLetter(alphabetLowerLetters, 'm', -312)).toBe('m');
        expect(shiftedLetter(alphabetLowerLetters, 'n', -338)).toBe('n');
        expect(shiftedLetter(alphabetLowerLetters, 'o', -364)).toBe('o');
        expect(shiftedLetter(alphabetLowerLetters, 'p', -390)).toBe('p');
        expect(shiftedLetter(alphabetLowerLetters, 'q', -416)).toBe('q');
        expect(shiftedLetter(alphabetLowerLetters, 'r', -442)).toBe('r');
        expect(shiftedLetter(alphabetLowerLetters, 's', -468)).toBe('s');
        expect(shiftedLetter(alphabetLowerLetters, 't', -494)).toBe('t');
        expect(shiftedLetter(alphabetLowerLetters, 'u', -520)).toBe('u');
        expect(shiftedLetter(alphabetLowerLetters, 'v', -546)).toBe('v');
        expect(shiftedLetter(alphabetLowerLetters, 'w', -572)).toBe('w');
        expect(shiftedLetter(alphabetLowerLetters, 'x', -598)).toBe('x');
        expect(shiftedLetter(alphabetLowerLetters, 'y', -624)).toBe('y');
        expect(shiftedLetter(alphabetLowerLetters, 'z', -650)).toBe('z');
    });

    it('Test Caesar Cipher', () => {
        // Positive Key Shift
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',1)).toBe('bcdefghijklmnopqrstuvwxyza');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',2)).toBe('cdefghijklmnopqrstuvwxyzab');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',3)).toBe('defghijklmnopqrstuvwxyzabc');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',4)).toBe('efghijklmnopqrstuvwxyzabcd');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',5)).toBe('fghijklmnopqrstuvwxyzabcde');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',6)).toBe('ghijklmnopqrstuvwxyzabcdef');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',7)).toBe('hijklmnopqrstuvwxyzabcdefg');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',8)).toBe('ijklmnopqrstuvwxyzabcdefgh');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',9)).toBe('jklmnopqrstuvwxyzabcdefghi');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',10)).toBe('klmnopqrstuvwxyzabcdefghij');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',11)).toBe('lmnopqrstuvwxyzabcdefghijk');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',12)).toBe('mnopqrstuvwxyzabcdefghijkl');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',13)).toBe('nopqrstuvwxyzabcdefghijklm');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',14)).toBe('opqrstuvwxyzabcdefghijklmn');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',15)).toBe('pqrstuvwxyzabcdefghijklmno');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',16)).toBe('qrstuvwxyzabcdefghijklmnop');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',17)).toBe('rstuvwxyzabcdefghijklmnopq');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',18)).toBe('stuvwxyzabcdefghijklmnopqr');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',19)).toBe('tuvwxyzabcdefghijklmnopqrs');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',20)).toBe('uvwxyzabcdefghijklmnopqrst');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',21)).toBe('vwxyzabcdefghijklmnopqrstu');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',22)).toBe('wxyzabcdefghijklmnopqrstuv');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',23)).toBe('xyzabcdefghijklmnopqrstuvw');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',24)).toBe('yzabcdefghijklmnopqrstuvwx');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',25)).toBe('zabcdefghijklmnopqrstuvwxy');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',26)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',52)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',78)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',104)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',130)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',156)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',182)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',208)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',234)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',260)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',286)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',312)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',338)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',364)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 390)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 416)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 442)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 468)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 494)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 520)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 546)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 572)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 598)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 624)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', 650)).toBe('abcdefghijklmnopqrstuvwxyz');
        // Negative Key Shift
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-1)).toBe('zabcdefghijklmnopqrstuvwxy');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-2)).toBe('yzabcdefghijklmnopqrstuvwx');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-3)).toBe('xyzabcdefghijklmnopqrstuvw');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-4)).toBe('wxyzabcdefghijklmnopqrstuv');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-5)).toBe('vwxyzabcdefghijklmnopqrstu');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-6)).toBe('uvwxyzabcdefghijklmnopqrst');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-7)).toBe('tuvwxyzabcdefghijklmnopqrs');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-8)).toBe('stuvwxyzabcdefghijklmnopqr');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-9)).toBe('rstuvwxyzabcdefghijklmnopq');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-10)).toBe('qrstuvwxyzabcdefghijklmnop');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-11)).toBe('pqrstuvwxyzabcdefghijklmno');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-12)).toBe('opqrstuvwxyzabcdefghijklmn');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-13)).toBe('nopqrstuvwxyzabcdefghijklm');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-14)).toBe('mnopqrstuvwxyzabcdefghijkl');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-15)).toBe('lmnopqrstuvwxyzabcdefghijk');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-16)).toBe('klmnopqrstuvwxyzabcdefghij');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-17)).toBe('jklmnopqrstuvwxyzabcdefghi');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-18)).toBe('ijklmnopqrstuvwxyzabcdefgh');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-19)).toBe('hijklmnopqrstuvwxyzabcdefg');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-20)).toBe('ghijklmnopqrstuvwxyzabcdef');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-21)).toBe('fghijklmnopqrstuvwxyzabcde');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-22)).toBe('efghijklmnopqrstuvwxyzabcd');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-23)).toBe('defghijklmnopqrstuvwxyzabc');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-24)).toBe('cdefghijklmnopqrstuvwxyzab');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-25)).toBe('bcdefghijklmnopqrstuvwxyza');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-26)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-52)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-78)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-104)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-130)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-156)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-182)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-208)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-234)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-260)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-286)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-312)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-338)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz',-364)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -390)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -416)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -442)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -468)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -494)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -520)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -546)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -572)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -598)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -624)).toBe('abcdefghijklmnopqrstuvwxyz');
        expect(caesarCipher('abcdefghijklmnopqrstuvwxyz', -650)).toBe('abcdefghijklmnopqrstuvwxyz');
    });
});